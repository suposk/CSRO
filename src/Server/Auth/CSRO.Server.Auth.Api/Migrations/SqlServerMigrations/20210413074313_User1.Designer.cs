// <auto-generated />
using System;
using CSRO.Server.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSRO.Server.Auth.Api.Migrations.SqlServerMigrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20210413074313_User1")]
    partial class User1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CSRO.Server.Entities.Entity.Role", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Name");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Name = "Admin",
                            CreatedAt = new DateTime(2021, 4, 13, 7, 43, 12, 645, DateTimeKind.Utc).AddTicks(3505),
                            CreatedBy = "Script",
                            Id = 1
                        },
                        new
                        {
                            Name = "Contributor",
                            CreatedAt = new DateTime(2021, 4, 13, 7, 43, 12, 645, DateTimeKind.Utc).AddTicks(4627),
                            CreatedBy = "Script",
                            Id = 3
                        },
                        new
                        {
                            Name = "User",
                            CreatedAt = new DateTime(2021, 4, 13, 7, 43, 12, 645, DateTimeKind.Utc).AddTicks(4630),
                            CreatedBy = "Script",
                            Id = 5
                        });
                });

            modelBuilder.Entity("CSRO.Server.Entities.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            ObjectId = new Guid("8aa6a8cb-36ed-415a-a12b-07c84af45428"),
                            Username = "live.com#jan.supolik@hotmail.com"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            ObjectId = new Guid("44769cb1-cca7-4a19-8bbe-8edea9b99179"),
                            Username = "read@jansupolikhotmail.onmicrosoft.com"
                        });
                });

            modelBuilder.Entity("CSRO.Server.Entities.Entity.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "CanApproveAdoRequest-Csro",
                            UserName = "live.com#jan.supolik@hotmail.com",
                            Value = "True"
                        },
                        new
                        {
                            Id = 2,
                            Type = "CanReadAdoRequest-Csro",
                            UserName = "live.com#jan.supolik@hotmail.com",
                            Value = "True"
                        },
                        new
                        {
                            Id = 3,
                            Type = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            UserName = "live.com#jan.supolik@hotmail.com",
                            Value = "jan.supolik@hotmail.com"
                        },
                        new
                        {
                            Id = 4,
                            Type = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            UserName = "live.com#jan.supolik@hotmail.com",
                            Value = "Admin"
                        },
                        new
                        {
                            Id = 21,
                            Type = "CanReadAdoRequest-Csro",
                            UserName = "read@jansupolikhotmail.onmicrosoft.com",
                            Value = "True"
                        },
                        new
                        {
                            Id = 22,
                            Type = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            UserName = "read@jansupolikhotmail.onmicrosoft.com",
                            Value = "read@someprovider.com"
                        });
                });

            modelBuilder.Entity("CSRO.Server.Entities.Entity.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("RoleName");

                    b.HasIndex("UserName");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin",
                            UserName = "live.com#jan.supolik@hotmail.com"
                        });
                });

            modelBuilder.Entity("CSRO.Server.Entities.Entity.UserClaim", b =>
                {
                    b.HasOne("CSRO.Server.Entities.Entity.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserName")
                        .HasPrincipalKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CSRO.Server.Entities.Entity.UserRole", b =>
                {
                    b.HasOne("CSRO.Server.Entities.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleName");

                    b.HasOne("CSRO.Server.Entities.Entity.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserName")
                        .HasPrincipalKey("Username");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CSRO.Server.Entities.Entity.User", b =>
                {
                    b.Navigation("UserClaims");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
