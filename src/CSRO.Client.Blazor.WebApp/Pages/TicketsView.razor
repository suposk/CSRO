@page "/ticketsview"
@inherits TicketsViewBase
@using CSRO.Client.Services.Models;


<MudContainer MaxWidth="MaxWidth.Large" Class="mt-6">
    <MudText Typo="Typo.h4" GutterBottom="true">Tickes count: @Tickets?.Count</MudText>
    <MudText Class="mb-8">List of Available.....</MudText>
    @if (Tickets == null)
    {
        <MudText>Loading...</MudText>
        <MudProgressCircular Color="Color.Default" Indeterminate="true" /> }
    else
    {
        <MudTable Items="Tickets" Hover="true" SortLabel="Sort By" Elevation="0">
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Ticket, object>(x=>x.Id)">Id</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Ticket, object>(x=>x.RequestedFor)">Requested For</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Ticket, object>(x=>x.CreatedBy)">Created By</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Ticket, object>(x=>x.IsOnBehalf)">Is OnBehalf</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Ticket, object>(x=>x.Description)">Description</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Ticket, object>(x=>x.CreatedAt)">Created At</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Ticket, object>(x=>x.ModifiedAt)">ModifiedAt At</MudTableSortLabel></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Id">@context.Id</MudTd>
                <MudTd DataLabel="Requested For">@context.RequestedFor</MudTd>
                <MudTd DataLabel="Created By">@context.CreatedBy</MudTd>
                <MudTd DataLabel="Is OnBehalf">@context.IsOnBehalf</MudTd>
                <MudTd DataLabel="Description">@context.Description</MudTd>
                <MudTd DataLabel="Created At">@context.CreatedAt</MudTd>
                <MudTd DataLabel="Modified At">@context.ModifiedAt</MudTd>
                <MudPaper Class="demo-grid-paper" Elevation="0">
                    <MudTooltip Text="Edit" Delayed="1">
                        <MudIconButton Link="@($"ticketedit/{context.Id}")" Icon="@Icons.Material.Edit"></MudIconButton>
                    </MudTooltip>
                    <MudTooltip Text="Details">
                        <MudIconButton Link="@($"ticketview/{context.Id}")" Icon="@Icons.Material.Info"></MudIconButton>
                    </MudTooltip>
                    <MudTooltip Text="Delete Async">
                        <MudIconButton OnClick="@(e => DeleteTicketAsync(context))" Icon="@Icons.Material.Delete"></MudIconButton>
                    </MudTooltip>
                </MudPaper>
                @*<div>
            <div class="d-inline pa-2">
                <MudTooltip Text="Edit" Delayed="1">
                    <MudNavLink Href="@($"ticketedit/{context.Id}")" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Edit"></MudNavLink>
                </MudTooltip>
            </div>
            <div class="d-inline pa-2">
                <MudTooltip Text="Details">
                    <MudNavLink Href="@($"ticketedit/{context.Id}")" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Info"></MudNavLink>
                </MudTooltip>
            </div>
        </div>*@
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[]{10, 20, 50}" />
            </PagerContent>
        </MudTable>
    }
</MudContainer>