@page "/Customers/CustomerCodes"
@inherits CustomerCodesBase

@using CSRO.Client.Services.Models

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-6">
    <MudText Typo="Typo.h5" Class="mt-2" GutterBottom="true">Customer Search</MudText>
    @if (IsLoading)
    {
        <MudGrid>
            <MudItem>
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            </MudItem>
            <MudItem>
                <MudText Align="Align.Center">@LoadingMessage</MudText>
            </MudItem>
        </MudGrid>
    }

    <MudCard>
        <MudGrid>
            <MudItem xs="6" sm="3" Class="d-flex align-center justify-center mud-width-full py-8">
                <MudCardContent>
                    <MudGrid>
                        <MudItem>
                            <MudAutocomplete ResetValueOnEmptyText="true"
                                             T="@IdName"
                                             Dense="true"
                                             Label="All Subscriptions"
                                             @bind-Value="SelectedSub"
                                             SearchFunc="@SearchSubs" />
                        </MudItem>

                        @*<MudItem>
                                <MudIconButton IconSize="Size.Small" Style="height:20px;width:20px"
                                        Icon="@((SelectedSub == null || string.IsNullOrWhiteSpace(SelectedSub.Name)) ? string.Empty : Icons.Material.Filled.Clear)"
                                        OnClick="@(e => { SelectedSubs.Clear(); CustomerSearchType = CustomerSearchTypeEnum.None; })">
                                </MudIconButton>
                            </MudItem>*@
                    </MudGrid>
                </MudCardContent>
            </MudItem>

            <MudItem xs="6" sm="3" Class="d-flex align-center justify-center mud-width-full py-8">
                <MudCardContent>
                    <MudTextField Adornment="Adornment.End"
                                  AdornmentIcon="@(string.IsNullOrWhiteSpace(AtCode) ? string.Empty : Icons.Material.Filled.Clear)"
                                  OnAdornmentClick="@(e => { AtCode = null; CustomerSearchType = CustomerSearchTypeEnum.None; })"
                                  @bind-Value="AtCode"
                                  Label="Enter AT Code" />
                </MudCardContent>
            </MudItem>

            @*<MudItem xs="6" sm="3" Class="d-flex align-center justify-center mud-width-full py-8">
                    <MudItem xs="12" md="12">
                        <MudSelect T="@IdName"
                                   HelperText="Pick your filtered Subscription"
                                   MultiSelection="true"
                                   Dense="true"
                                   OffsetY="true"
                                   SelectedValuesChanged="OnSubscriptionsChanged"
                                   >
                            @foreach (var sub in SubscripionsFiltered)
                            {
                                <MudSelectItem T="IdName" Value="@sub">@sub</MudSelectItem>
                            }
                        </MudSelect>
                        <MudText Typo="Typo.body2">Selected Sub:</MudText>
                        <MudText Typo="Typo.body2">@(string.Join(", ", SelectedSubs.Select(x=>$"\"{x}\"")))</MudText>
                    </MudItem>
                </MudItem>*@

            <MudItem xs="6" sm="3" Class="d-flex align-center justify-center mud-width-full py-8">
                <MudItem xs="12" md="12">
                    <MudSelect T="@IdName"
                               HelperText="Pick Region"
                               MultiSelection="true"
                               Dense="true"
                               OffsetY="true"
                               SelectedValuesChanged="OnLocationsChanged">
                        @foreach (var reg in Locations)
                        {
                            <MudSelectItem @key="reg.Id" T="IdName" Value="@reg">@reg</MudSelectItem>
                        }
                    </MudSelect>
                    <MudText Typo="Typo.body2">Selected Loc:</MudText>
                    <MudText Typo="Typo.body2">@(string.Join(", ", SelectedRegions.Select(x=>$"\"{x}\"")))</MudText>
                </MudItem>
            </MudItem>

            <MudItem xs="6" sm="3" Class="d-flex align-center justify-center mud-width-full py-8">
                <MudButton Disabled="@(CustomerSearchType == CustomerSearchTypeEnum.None)"
                           Class="mt-4"
                           OnClick="Search" Variant="Variant.Filled" Color="Color.Primary">Search</MudButton>
            </MudItem>
        </MudGrid>
    </MudCard>

    <MudSwitch Class="mt-5"
               Label="Simple View"
               @bind-Checked="@IsSimpleView" Color="Color.Primary" />

    @if (IsSimpleView)
    {
        <MudTable Class="mt-5"
                  Dense="true"
                  Items="@Customers"
                  Hover="true"
                  RowsPerPage="20"
                  SortLabel="Sort By" Elevation="0">
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.AtCode)">AtCode</MudTableSortLabel></MudTh>                
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.Email)">Email</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.EmailGroup)">EmailGroup</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Customer, object>(x => x.SubscriptionName)">SubscriptionName</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.OpEnvironment)">OpEnvironment</MudTableSortLabel></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="AtCode">@context.AtCode</MudTd>                
                <MudTd DataLabel="Email">@context.Email</MudTd>
                <MudTd DataLabel="EmailGroup">@context.EmailGroup</MudTd>
                <MudTd DataLabel="SubscriptionName">@context.SubscriptionName</MudTd>
                <MudTd DataLabel="OpEnvironment">@context.OpEnvironment</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[] { 20, 50, 100 }" />
            </PagerContent>
        </MudTable>
    }
    else
    {
        <MudTable Class="mt-5"
                  Dense="true"
                  Items="@Customers"
                  Hover="true"
                  RowsPerPage="20"
                  SortLabel="Sort By" Elevation="0">
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.AtCode)">AtCode</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.AtName)">AtName</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.AtSwc)">AtSwc</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.Email)">Email</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.EmailGroup)">EmailGroup</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.ChatChannel)">ChatChannel</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Customer, object>(x => x.SubscriptionName)">SubscriptionName</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.SubscriptionId)">SubscriptionId</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.ResourceGroup)">ResourceGroup</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.ResourceLocation)">ResourceLocation</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.ResourceType)">ResourceType</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.AzureResource)">AzureResource</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.OpEnvironment)">OpEnvironment</MudTableSortLabel></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="AtCode">@context.AtCode</MudTd>
                <MudTd DataLabel="AtName">@context.AtName</MudTd>
                <MudTd DataLabel="AtSwc">@context.AtSwc</MudTd>
                <MudTd DataLabel="Email">@context.Email</MudTd>
                <MudTd DataLabel="EmailGroup">@context.EmailGroup</MudTd>
                <MudTd DataLabel="ChatChannel">@context.ChatChannel</MudTd>
                <MudTd DataLabel="SubscriptionName">@context.SubscriptionName</MudTd>
                <MudTd DataLabel="SubscriptionId">@context.SubscriptionId</MudTd>
                <MudTd DataLabel="ResourceGroup">@context.ResourceGroup</MudTd>
                <MudTd DataLabel="ResourceLocation">@context.ResourceLocation</MudTd>
                <MudTd DataLabel="ResourceType">@context.ResourceType</MudTd>
                <MudTd DataLabel="AzureResource">@context.AzureResource</MudTd>
                <MudTd DataLabel="OpEnvironment">@context.OpEnvironment</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[] { 20, 50, 100 }" />
            </PagerContent>
        </MudTable>
    }
</MudContainer>
