@page "/Customers/CustomerCodes"
@inherits CustomerCodesBase

@using CSRO.Client.Services.Models

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-6">
    <MudText Typo="Typo.h5" Class="mt-2" GutterBottom="true">Customer Search</MudText>
    @if (IsLoading)
    {
        <MudGrid>
            <MudItem>
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            </MudItem>
            <MudItem>
                <MudText Align="Align.Center">@LoadingMessage</MudText>
            </MudItem>
        </MudGrid>
    }

    <MudCard>
        <MudGrid>

            <MudItem xs="6" sm="3" Class="d-flex align-center justify-center mud-width-full py-8">
                <MudItem xs="12" md="12" Class="ml-2">
                    <MudSelect T="@IdName"
                               Label="Select Subscription(s)"
                               MultiSelection="true"
                               Dense="true"
                               OffsetY="true"
                               SelectedValuesChanged="OnSubscriptionsChanged">
                        @if (Subscripions.HasAnyInCollection())
                        {
                            <MudTextField Placeholder="Enter Subcription Name"
                                          Class="mt-0 mx-2"
                                          Adornment="Adornment.End"
                                          AdornmentIcon="@Icons.Material.Filled.Clear"
                                          OnAdornmentClick="@(e => { SearchSubText = null; CustomerSearchType = CustomerSearchTypeEnum.None; })"
                                          @bind-Value="SearchSubText"
                                          Immediate="true"
                                          DebounceInterval="300"
                                          T="string">
                            </MudTextField>
                        }
                        @foreach (var sub in SubscripionsFiltered)
                        {
                            <MudSelectItem T="IdName" @key="@sub.Id" Value="@sub">@sub</MudSelectItem>
                        }
                    </MudSelect>
                    @if (SelectedSubs.HasAnyInCollection())
                    {
                        <MudText Typo="Typo.body2">Selected Sub:</MudText>
                        <MudText Typo="Typo.body2">@(string.Join(", ", SelectedSubs.Select(x => $"\"{x}\"")))</MudText>
                    }
                </MudItem>
            </MudItem>

            <MudItem xs="6" sm="3" Class="d-flex align-center justify-center mud-width-full py-8">
                <MudItem xs="12" md="12">
                    <MudSelect T="string"
                               Label="Select Atcode(s)"
                               MultiSelection="true"
                               Dense="true"
                               OffsetY="true"
                               SelectedValuesChanged="OnAtCodesChanged">
                        @if (AtCodesList.HasAnyInCollection())
                        {
                            <MudTextField Placeholder="Enter Atcode"
                                          Class="mt-0 mx-2"
                                          Adornment="Adornment.End"
                                          AdornmentIcon="@Icons.Material.Filled.Clear"
                                          OnAdornmentClick="@(e => { SearchAtCode = null; CustomerSearchType = CustomerSearchTypeEnum.None; })"
                                          @bind-Value="SearchAtCode"
                                          Immediate="true"
                                          DebounceInterval="300"
                                          T="string">
                            </MudTextField>
                        }
                        @foreach (var item in AtCodesListFiltered)
                        {
                            <MudSelectItem T="string" @key="item" Value="@item">@item</MudSelectItem>
                        }
                    </MudSelect>
                    @if (SelectedAtCodes.HasAnyInCollection())
                    {
                        <MudText Typo="Typo.body2">Selected AtCodes:</MudText>
                        <MudText Typo="Typo.body2">@(string.Join(", ", SelectedAtCodes.Select(x => $"\"{x}\"")))</MudText>
                    }
                </MudItem>
            </MudItem>


            <MudItem xs="6" sm="3" Class="d-flex align-center justify-center mud-width-full py-8">
                <MudItem xs="12" md="12">
                    <MudSelect T="@IdName"
                               Label="Select Region(s)"
                               MultiSelection="true"
                               Dense="true"
                               OffsetY="true"
                               SelectedValuesChanged="OnLocationsChanged">
                        @foreach (var reg in Locations)
                        {
                            <MudSelectItem @key="reg.Id" T="IdName" Value="@reg">@reg</MudSelectItem>
                        }
                    </MudSelect>
                    @if (SelectedRegions.HasAnyInCollection())
                    {
                        <MudText Typo="Typo.body2">Selected Loc:</MudText>
                        <MudText Typo="Typo.body2">@(string.Join(", ", SelectedRegions.Select(x => $"\"{x}\"")))</MudText>
                    }
                </MudItem>
            </MudItem>

            <MudItem xs="6" sm="3" Class="d-flex align-center justify-center mud-width-full py-8">
                <MudItem xs="12" md="12">
                    <div Class="d-flex align-center flex-column py-2 px-1" >
                        <MudButton Disabled="@(CustomerSearchType == CustomerSearchTypeEnum.None)"
                                   Class="py-1 m-2"
                                   OnClick="Search" Variant="Variant.Filled" Color="Color.Primary">Search</MudButton>
                        @if (Customers.HasAnyInCollection())
                        {
                            <MudTooltip Text="Export Selected rows to Csv File.">
                                <MudButton Disabled="@(SelectedCustomers.IsNullOrEmptyCollection())"
                                           Class="py-1 m-2"
                                           OnClick="Export" Variant="Variant.Filled" Color="Color.Success">Export</MudButton>
                            </MudTooltip>
                        }
                    </div>
                </MudItem>
            </MudItem>
        </MudGrid>
    </MudCard>

    <MudSwitch Class="mt-5"
               Label=@((IsSimpleView) ? "Simple View (On)" : "Simple View (Off)")
               @bind-Checked="@IsSimpleView" Color="Color.Primary" />

    @if (Customers.HasAnyInCollection())
    {
        <MudText>@($"Total Count: {Customers.Count}")</MudText>
    }

    @if (IsSimpleView)
    {
        <MudTable Class="mt-5"
                  Dense="true"
                  MultiSelection="true"
                  Items="@Customers" 
                  Hover="true"
                  @bind-SelectedItems="SelectedCustomers"
                  RowsPerPage="20"
                  SortLabel="Sort By" Elevation="0">
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.AtCode)">AtCode</MudTableSortLabel></MudTh>                
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.Email)">Email</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.EmailGroup)">EmailGroup</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Customer, object>(x => x.SubscriptionName)">SubscriptionName</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.OpEnvironment)">OpEnvironment</MudTableSortLabel></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="AtCode">@context.AtCode</MudTd>                
                <MudTd DataLabel="Email">@context.Email</MudTd>
                <MudTd DataLabel="EmailGroup">@context.EmailGroup</MudTd>
                <MudTd DataLabel="SubscriptionName">@context.SubscriptionName</MudTd>
                <MudTd DataLabel="OpEnvironment">@context.OpEnvironment</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[] { 20, 50, 100 }" />
            </PagerContent>
        </MudTable>
    }
    else
    {
        <MudTable Class="mt-5"
                  Dense="true"
                  MultiSelection="true"
                  Items="@Customers"
                  Hover="true"
                  @bind-SelectedItems="SelectedCustomers"
                  RowsPerPage="20"
                  SortLabel="Sort By" Elevation="0">
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.AtCode)">AtCode</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.AtName)">AtName</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.AtSwc)">AtSwc</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.Email)">Email</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.EmailGroup)">EmailGroup</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.ChatChannel)">ChatChannel</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Customer, object>(x => x.SubscriptionName)">SubscriptionName</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.SubscriptionId)">SubscriptionId</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.ResourceGroup)">ResourceGroup</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.ResourceLocation)">ResourceLocation</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.ResourceType)">ResourceType</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.AzureResource)">AzureResource</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x => x.OpEnvironment)">OpEnvironment</MudTableSortLabel></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="AtCode">@context.AtCode</MudTd>
                <MudTd DataLabel="AtName">@context.AtName</MudTd>
                <MudTd DataLabel="AtSwc">@context.AtSwc</MudTd>
                <MudTd DataLabel="Email">@context.Email</MudTd>
                <MudTd DataLabel="EmailGroup">@context.EmailGroup</MudTd>
                <MudTd DataLabel="ChatChannel">@context.ChatChannel</MudTd>
                <MudTd DataLabel="SubscriptionName">@context.SubscriptionName</MudTd>
                <MudTd DataLabel="SubscriptionId">@context.SubscriptionId</MudTd>
                <MudTd DataLabel="ResourceGroup">@context.ResourceGroup</MudTd>
                <MudTd DataLabel="ResourceLocation">@context.ResourceLocation</MudTd>
                <MudTd DataLabel="ResourceType">@context.ResourceType</MudTd>
                <MudTd DataLabel="AzureResource">@context.AzureResource</MudTd>
                <MudTd DataLabel="OpEnvironment">@context.OpEnvironment</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[] { 20, 50, 100 }" />
            </PagerContent>
        </MudTable>
    }
</MudContainer>
